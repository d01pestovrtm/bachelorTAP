name: Build and Release

# This workflow runs when you create a new tag (e.g., v1.0, v1.1.0)
on:
  push:
    tags:
      - 'v*' # Trigger on tags starting with 'v', like v1.0

jobs:
  build:
    # We need a Windows machine to build a .exe file
    runs-on: windows-latest

    steps:
      # 1. Checks out your repository's code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Sets up a Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Use the Python version you develop with

      # 3. Installs your project's dependencies from requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # 4. Runs PyInstaller to create the single .exe file
      #    --onefile: Bundles everything into a single .exe
      #    --windowed: Hides the black console window if you have a GUI
      #    Replace 'main.py' with your main script's filename
      - name: Build with PyInstaller
        run: pyinstaller --onefile --windowed --name="KnotTAP" main.py

      # 5. Creates a new Release on GitHub
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # 6. Uploads the .exe file from the 'dist' folder to the GitHub Release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/KnotTAP.exe
          asset_name: KnotTAP.exe
          asset_content_type: application/vnd.microsoft.portable-executable
